// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Issue {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  description String   @db.Text
  status      Status   @default(OPEN)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Status {
  OPEN
  IN_PROGRESS
  CLOSED
}

model Area {
  id                 Int      @id @default(autoincrement())
  name               String   @db.VarChar(255)
  slug               String   @db.VarChar(255)
  orientation        String   @db.VarChar(25)
  sequence           Int      @db.SmallInt
  online             Int      @db.SmallInt
  image              String   @db.VarChar(25)
  header_image       String   @db.VarChar(255)
  lat                Decimal  @db.Decimal(4, 2)
  lng                Decimal  @db.Decimal(4, 2)
  zoom               Int      @db.SmallInt
  rock_resposibility String   @db.VarChar(255)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  rocks              Rock[]
  Routes             Routes[]
  Video              Video[]
}

model Rock {
  id               Int      @id @default(autoincrement())
  area_id          Int
  area             Area     @relation(fields: [area_id], references: [id])
  name             String   @db.VarChar(255)
  slug             String   @db.VarChar(255)
  nr               Int      @db.SmallInt
  description      String?  @db.Text
  access           String?  @db.Text
  nature           String?  @db.Text
  zone             Int?     @db.SmallInt
  banned           Int?     @db.SmallInt
  height           Int?     @db.SmallInt
  orientation      String?  @db.VarChar(50)
  season           String?  @db.VarChar(50)
  child_frienly    Int?     @db.SmallInt
  sunny            Int?     @db.SmallInt
  rain             Int?     @db.SmallInt
  image            String?  @db.VarChar(255)
  header_image     String?  @db.VarChar(255)
  topo             Int?     @db.SmallInt
  lat              Decimal? @db.Decimal(10, 6)
  lng              Decimal? @db.Decimal(10, 6)
  online           Int      @db.SmallInt
  path_coordinates Json?
  zoom             Int?     @db.SmallInt
  preview_image    String?  @db.VarChar(255)
  train            Int?     @db.SmallInt
  Routes           Routes[]
  Topo             Topo[]
  Video            Video[]
}

model Routes {
  id                  Int      @id @default(autoincrement())
  area_id             Int
  area                Area     @relation(fields: [area_id], references: [id])
  rock_id             Int
  rock                Rock     @relation(fields: [rock_id], references: [id])
  name                String   @db.VarChar(255)
  grade               String   @db.VarChar(20)
  climbed             Int?     @db.SmallInt
  first_ascent        String   @db.VarChar(255)
  year_first_ascent   Int?     @db.SmallInt
  protecttion         Int?     @db.SmallInt
  scale               String   @db.VarChar(100)
  grade_no            Int?     @db.SmallInt
  rating              Int?     @db.SmallInt
  topo_id             Int?     @db.SmallInt
  nr                  Int?     @db.SmallInt
  relates_to_route_id Int?     @db.SmallInt
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  Video               Video[]
}

model Topo {
  id          Int      @id @default(autoincrement())
  rocks_id    Int
  rock        Rock     @relation(fields: [rocks_id], references: [id])
  name        String   @db.VarChar(255)
  image       String   @db.VarChar(255)
  with_sector Int?     @db.SmallInt
  svg         String   @db.Text
  number      Int?     @db.SmallInt
  topo_image  String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Video {
  id             Int      @id @default(autoincrement())
  video_area_id  Int
  area           Area     @relation(fields: [video_area_id], references: [id])
  video_rocks_id Int
  rock           Rock     @relation(fields: [video_rocks_id], references: [id])
  video_route_id Int
  route          Routes   @relation(fields: [video_route_id], references: [id])
  video_link     String   @db.VarChar(255)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
